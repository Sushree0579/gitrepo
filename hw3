Feature: Amazon Sign in page

  Scenario: Logged out users sees Sign In When Clicking on Returns and Orders
    Given Open Amazon page
    When Click on Orders and Returns page
    Then Verify that Sign in page opened

 Homework 3
#By CSS using classes for "amazon" and "create account"
driver.find_element(By.CSS_SELECTOR, 'i.a-icon')
driver.find_element(By.CSS_SELECTOR, 'h1.a-spacing-small')
#By Css using ID for "your name" , "E-mail" ," password"
driver.find_element(By.CSS_SELECTOR, '#ap_customer_name')
driver.find_element(By.CSS_SELECTOR, '#ap_email')
driver.find_element(By.CSS_SELECTOR, '#ap_password')
#By CSS using Class "password must be atleast 6 charcters"
driver.find_element(By.CSS_SELECTOR, '$$("div.a-alert-inline")')
#By CSS using ID for "Re-enter password"
driver.find_element(By.CSS_SELECTOR, '#ap_password_check')
#By Css using Class for"Create your amazon account"
driver.find_element(By.CSS_SELECTOR, 'input.a-button-input')
#By Css using attributes for "Conditions of use"
driver.find_element(By.CSS_SELECTOR, "a[href='/gp/help/customer/display.html/ref=ap_register_notification_condition_of_use?ie=UTF8&nodeId=508088']")
#By Css using attributes for "Privacy Notice"
driver.find_element(By.CSS_SELECTOR, "a[href='/gp/help/customer/display.html/ref=ap_register_notification_privacy_notice?ie=UTF8&nodeId=468496']")

#By Css using Class for "signin"
driver.find_element(By.CSS_SELECTOR, 'a.a-link-emphasis')


Feature: Amazon Sign in page

  Scenario: Logged out users sees Sign In When Clicking on Returns and Orders
    Given Open Amazon page
    When Click on Orders and Returns page
    Then Verify that Sign in page opened

from selenium.webdriver.common.by import By
from behave import given,when,then

@given('open Amazon page')
def open_amazon(context):
    context.driver.get('https://www.amazon.com/')


@@when('click on cart icon')
def cart_icon(context):
    context.driver.find_element(By.CSS_SELECTOR, 'span.nav-cart-icon')
    context.driver.find_element(By.CSS_SELECTOR, 'span.nav-sprite')


@then('verify that "cart_icon" is empty')
def verify_cart_icon(context):
    expected_result = '"empty"'
    actual_result = context.driver.find_element(By.CSS_SELECTOR, 'h1.a-spacing-small')
    assert expected_result == actual_result, f'Expected{expected_result} but got actual {actual_result}'


